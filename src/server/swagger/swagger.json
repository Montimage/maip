{
  "openapi" : "3.0.2",
  "info" : {
    "title" : "Montimage AI Platform (MAIP)",
    "description" : "The APIs provided by MAIP",
    "termsOfService" : "https://github.com/Montimage/maip",
    "contact" : {
      "email" : "developer@montimage.com"
    },
    "license" : {
      "name" : "Montimage",
      "url" : "https://www.montimage.com"
    },
    "version" : "v1"
  },
  "externalDocs" : {
    "description" : "Find out more about Montimage open-source projects",
    "url" : "https://github.com/montimage"
  },
  "servers": [
    {
      "description": "Localhost Server",
      "url": "http://localhost:31057/api/"
    }
  ],
  "tags" : [ {
    "name" : "mmt",
    "description" : "Everything relates to manipulating the MMT Tool",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://github.com/montimage/mmt-probe"
    }
  }, {
    "name" : "reports",
    "description" : "Access to reports which are the output of analysing a pcap file",
    "externalDocs" : {
      "description" : "More detail on the report format",
      "url" : "http://github.com/montimage/mmt-probe"
    }
  }, {
    "name" : "pcaps",
    "description" : "List/upload trace file for analysing"
  }, {
    "name" : "logs",
    "description" : "Access to the log of MMT Tools"
  }, {
    "name" : "models",
    "description" : "API relates to the model and the building model process"
  }, {
    "name" : "predictions",
    "description" : "API relates to the prediction process"
  }, {
    "name" : "xai",
    "description" : "API relates to XAI"
  } ],
  "paths" : {
    "/mmt/" : {
      "get" : {
        "tags" : [ "mmt" ],
        "summary" : "Get the status of MMT Tool",
        "description" : "Get the status of MMT Tool",
        "operationId" : "getMMTStatus",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mmtStatus"
                }
              }
            }
          }
        }
      }
    },
    "/mmt/stop" : {
      "get" : {
        "tags" : [ "mmt" ],
        "summary" : "Stop analyzing",
        "description" : "Stop the analyzing process if there is any",
        "operationId" : "stopMMT",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mmtStatus"
                }
              }
            }
          }
        }
      }
    },
    "/mmt/offline" : {
      "post" : {
        "tags" : [ "mmt" ],
        "summary" : "Start analysing a pcap file",
        "description" : "Analysing a pcap file",
        "operationId" : "runMMTOffline",
        "requestBody" : {
          "description" : "The name of the pcap file",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "fileName" : {
                    "type" : "string",
                    "example" : "tcp_bbc-out-of-order.pcap"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mmtStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Cannot launch MMT Tool"
          }
        }
      }
    },
    "/mmt/dataset" : {
      "post" : {
        "tags" : [ "mmt" ],
        "summary" : "Analyzing a dataset",
        "description" : "Start analysing a dataset which includes a set of trace files",
        "operationId" : "runMMTdataset",
        "requestBody" : {
          "description" : "The name of the dataset",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "datasetName" : {
                    "type" : "string",
                    "example" : "tcp-dataset"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mmtStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Cannot launch MMT Tool"
          }
        }
      }
    },
    "/mmt/online" : {
      "post" : {
        "tags" : [ "mmt" ],
        "summary" : "Start monitor a network interface in real-time",
        "description" : "Monitor a network interface in real-time",
        "operationId" : "runMMTOnline",
        "requestBody" : {
          "description" : "The name of the interface on the monitoring machine",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "netInf" : {
                    "type" : "string",
                    "example" : "enp0s1"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/mmtStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Cannot launch MMT Tool"
          }
        }
      }
    },
    "/reports/" : {
      "get" : {
        "tags" : [ "reports" ],
        "summary" : "Get reports list",
        "description" : "Get the list of all reports have been generated by the MMT Tool",
        "operationId" : "getAllReport",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "reports" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "report-3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "reports" ],
        "summary" : "Delete all reports",
        "description" : "Delete all reports",
        "operationId" : "deleteReports",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful delete all reports"
          }
        }
      }
    },
    "/reports/{reportId}" : {
      "get" : {
        "tags" : [ "reports" ],
        "summary" : "Get list csv of a report",
        "description" : "Get full list of csv files of a given report",
        "operationId" : "getAReport",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "description" : "ID of report to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "report-3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "csvFiles" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "1673907516.082856_0__data.csv"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/{reportId}/{fileName}/download" : {
      "get" : {
        "tags" : [ "reports" ],
        "summary" : "Download a raw report file",
        "description" : "Download a raw report file",
        "operationId" : "downloadReport",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "description" : "ID of report to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "report-3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace"
          }
        }, {
          "name" : "fileName",
          "in" : "path",
          "description" : "Name of the csv file to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "1673907516.082856_0__data.csv"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "multipart/form-data" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "401" : {
            "description" : "Log file does not exist"
          }
        }
      }
    },
    "/reports/{reportId}/{fileName}" : {
      "get" : {
        "tags" : [ "reports" ],
        "summary" : "Get detail of a csv file of a report",
        "description" : "Get detail of a csv file of a given report",
        "operationId" : "getCSVReport",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "description" : "ID of report to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "report-3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace"
          }
        }, {
          "name" : "fileName",
          "in" : "path",
          "description" : "Name of the csv file to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "1673907516.082856_0__data.csv"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "content" : {
                      "type" : "string",
                      "example" : "1,2,3,43,,4,5,5,6,6"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logs/" : {
      "get" : {
        "tags" : [ "logs" ],
        "summary" : "Get the list of all logs",
        "description" : "Get the list of all logs have been generated by the MMT Tool",
        "operationId" : "getAllLogs",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "logs" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.log"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "logs" ],
        "summary" : "Delete all logs",
        "description" : "Delete all logs",
        "operationId" : "deleteLogs",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful delete all logs"
          }
        }
      }
    },
    "/logs/{fileName}/download" : {
      "get" : {
        "tags" : [ "logs" ],
        "summary" : "Download a log file",
        "description" : "Download a log file",
        "operationId" : "downloadLog",
        "parameters" : [ {
          "name" : "fileName",
          "in" : "path",
          "description" : "Name of the log file to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.log"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "multipart/form-data" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "401" : {
            "description" : "Log file does not exist"
          }
        }
      }
    },
    "/logs/{fileName}" : {
      "get" : {
        "tags" : [ "logs" ],
        "summary" : "Get detail of a log file",
        "description" : "Get content of a log file",
        "operationId" : "getLog",
        "parameters" : [ {
          "name" : "fileName",
          "in" : "path",
          "description" : "Name of the log file to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.log"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "content" : {
                      "type" : "string",
                      "example" : "this is the log content"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pcaps/" : {
      "get" : {
        "tags" : [ "pcaps" ],
        "summary" : "Get the list of all pcap files",
        "description" : "Get the list of all pcap files which are available for analyzing",
        "operationId" : "getPcapList",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "pcaps" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "tcp_bbc-out-of-order.pcap"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "pcaps" ],
        "summary" : "Upload a pcap file",
        "description" : "Update a pcap file to analyse",
        "operationId" : "uploadPcap",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "pcapFile" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "pcapFile" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to upload pcap files"
          }
        }
      },
      "delete" : {
        "tags" : [ "pcaps" ],
        "summary" : "Delete all pcaps",
        "description" : "Delete all pcaps",
        "operationId" : "deletePcaps",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful delete all uploaded pcaps"
          }
        }
      }
    },
    "/pcaps/datasets" : {
      "get" : {
        "tags" : [ "pcaps" ],
        "summary" : "Get all datasets containing pcap files",
        "description" : "Get all datasets containing pcap files",
        "operationId" : "getPcapAllDatasets",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "datasets" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "bot-test"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pcaps/dataset/{datasetName}" : {
      "get" : {
        "tags" : [ "pcaps" ],
        "summary" : "Get the list of all pcap files of a given dataset",
        "description" : "Get the list of all pcap files of a given dataset which can be analyze in dataset mode",
        "operationId" : "getPcapDataset",
        "parameters" : [ {
          "name" : "datasetName",
          "in" : "path",
          "description" : "Name of the dataset",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "ip-dataset01"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "pcaps" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "ip_ping_local_ip_fragmentation.pcap"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "pcaps" ],
        "summary" : "Upload a list of pcap files to a dataset",
        "description" : "Update a list of pcap files to build a dataset",
        "operationId" : "uploadPcapDataset",
        "parameters" : [ {
          "name" : "datasetName",
          "in" : "path",
          "description" : "Name of the dataset",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "my_dataset"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "pcapFiles" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "binary"
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "pcapFileName" : {
                      "type" : "string",
                      "example" : "my_dataset.pcap"
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to create dataset location"
          }
        }
      },
      "delete" : {
        "tags" : [ "pcaps" ],
        "summary" : "Delete the dataset and its pcap files",
        "description" : "Delete the dataset and its pcap files",
        "operationId" : "deleteDatasetPcaps",
        "parameters" : [ {
          "name" : "datasetName",
          "in" : "path",
          "description" : "Name of the dataset",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "my_dataset"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete the dataset and its pcap files"
          }
        }
      }
    },
    "/build/" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "The building model process status",
        "description" : "Get the status of building model process",
        "operationId" : "getBuildingStatus",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/buildingStatus"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "models" ],
        "summary" : "Start building a model",
        "description" : "Request building a model",
        "operationId" : "requestBuildModel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/buildConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/buildingStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to process building a model"
          }
        }
      }
    },
    "/ac/datasets/" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "Get datasets for building AC models",
        "description" : "Get datasets for building AC models",
        "operationId" : "requestDatasetsAC",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "models" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "output_full.csv"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ac/build/" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "The building AC model process status",
        "description" : "Get the status of building AC model process",
        "operationId" : "getBuildingACStatus",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/buildingACStatus"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "models" ],
        "summary" : "Start building an AC model",
        "description" : "Request building an AC model",
        "operationId" : "requestBuildModelAC",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/buildACConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/buildingACStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to process building a model"
          }
        }
      }
    },
    "/retrain/" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "The retraining model process status",
        "description" : "Get the status of retraining model process",
        "operationId" : "getRetrainStatus",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/retrainStatus"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "models" ],
        "summary" : "Retraining models using different training datasets",
        "description" : "Retraining models using different training datasets",
        "operationId" : "requestRetrainModel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/retrainConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/retrainStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to process retraining a model"
          }
        }
      }
    },
    "/retrain/{modelId}" : {
      "post" : {
        "tags" : [ "models" ],
        "summary" : "Retraining a specific model using different training datasets",
        "description" : "Retraining a specific model using different training datasets",
        "operationId" : "requestRetrainADModel",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model file to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.h5"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/retrainADConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/retrainStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to process retraining a model"
          }
        }
      }
    },
    "/ac/retrain/" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "The retraining AC model process status",
        "description" : "Get the status of retraining AC model process",
        "operationId" : "getRetrainACStatus",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/retrainACStatus"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "models" ],
        "summary" : "Retraining AC models using different training datasets",
        "description" : "Retraining AC models using different training datasets",
        "operationId" : "requestRetrainModelAC",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/retrainACConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/retrainACStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to process retraining an AC model"
          }
        }
      }
    },
    "/ac/retrain/{modelId}" : {
      "post" : {
        "tags" : [ "models" ],
        "summary" : "Retraining a specific AC model using different training datasets",
        "description" : "Retraining a specific AC model using different training datasets",
        "operationId" : "requestRetrainACModel",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model file to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "ac-lightgbm"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type": "object",
                "properties": {
                  "datasetsConfig": {
                    "$ref" : "#/components/schemas/datasetsConfig"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/retrainStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to process retraining a model"
          }
        }
      }
    },
    "/models/" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "Get the list of all models",
        "description" : "Get the list of all models can be used",
        "operationId" : "getAllModels",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "models" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.h5"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/models/app/{app}" : {
      "delete" : {
        "tags" : [ "models" ],
        "summary" : "Delete existing models",
        "description" : "Delete existing models",
        "operationId" : "deleteModels",
        "parameters" : [ {
          "name" : "app",
          "in" : "path",
          "description" : "Application",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ac", "ad", "rca" ],
            "example" : "ac"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete models"
          }
        }
      }
    },
    "/models/{modelId}" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "Get the details of a model",
        "description" : "Get the details of a model",
        "operationId" : "getModelStats",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "content" : {
                      "type" : "string",
                      "example" : ""
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["models"],
        "summary": "Update existing model ID",
        "description": "Renames the model with the given ID to a new ID",
        "operationId": "updateModelId",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "ID of the model to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New model ID",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newModelId": {
                    "type": "string",
                    "description": "New ID for the model"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update name of a model"
          }
        }
      },
      "delete" : {
        "tags" : [ "models" ],
        "summary" : "Delete a model",
        "description" : "Delete a model",
        "operationId" : "deleteModel",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete a model"
          }
        }
      }
    },
    "/models/{modelId}/download" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "Download a model file",
        "description" : "Download a model file",
        "operationId" : "downloadModel",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model file to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "multipart/form-data" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "401" : {
            "description" : "Model file does not exist"
          }
        }
      }
    },
    "/models/{modelId}/datasets/" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "Get all datasets of the model",
        "description" : "Get all datasets of the model",
        "operationId" : "getModelDatasets",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model file to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "datasets" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "rsl_poisoned_dataset.csv"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Model does not exist"
          }
        }
      }
    },
    "/models/{modelId}/datasets/{datasetType}/download" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "Download a dataset",
        "description" : "Download a dataset in .csv format",
        "operationId" : "downloadModelDatasets",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model file to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.h5"
          }
        }, {
          "name" : "datasetType",
          "in" : "path",
          "description" : "Type of the dataset",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "train", "test" ],
            "example" : "train"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "multipart/form-data" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "401" : {
            "description" : "Dataset file does not exist"
          }
        }
      }
    },
    "/models/{modelId}/confusion-matrix" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "Get the confusion matrix of the building model process",
        "description" : "Get the confusion matrix of the building model process",
        "operationId" : "getModelConfMatrix",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "content" : {
                      "type" : "string",
                      "example" : ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/models/{modelId}/build-config" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "Get the information relate to the building of the model",
        "description" : "Get the configuration of the model building process",
        "operationId" : "getModelBuildConfig",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/buildConfig"
                }
              }
            }
          }
        }
      }
    },
    "/models/{modelId}/predictions" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "Get predictions of the model",
        "description" : "Get predictions of the model",
        "operationId" : "getModelPredictions",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : ""
                }
              }
            }
          }
        }
      }
    },
    "/models/{modelId}/probabilities" : {
      "get" : {
        "tags" : [ "models" ],
        "summary" : "Get probabilities of the model",
        "description" : "Get probabilities of the model",
        "operationId" : "getModelProbabilities",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : ""
                }
              }
            }
          }
        }
      }
    },
    "/predict/" : {
      "get" : {
        "tags" : [ "predictions" ],
        "summary" : "The prediction process status",
        "description" : "Get the status of the latest prediction process",
        "operationId" : "getPredictionStatus",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/predictingStatus"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "predictions" ],
        "summary" : "Start predicting",
        "description" : "Request predicting for an input traffic",
        "operationId" : "requestPredicting",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/predictConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/predictingStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to process a prediction"
          }
        }
      }
    },
    "/predict/stop" : {
      "get" : {
        "tags" : [ "predictions" ],
        "summary" : "Stop the current prediction process",
        "description" : "Stop the current online prediction process",
        "operationId" : "stopOnlinePrediction",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/predictingStatus"
                }
              }
            }
          }
        }
      }
    },
    "/predictions/" : {
      "get" : {
        "tags" : [ "predictions" ],
        "summary" : "Get the list of all predictions",
        "description" : "Get the list of all predictions",
        "operationId" : "getAllPredictions",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "predictions" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/predictions/{predictionId}" : {
      "get" : {
        "tags" : [ "predictions" ],
        "summary" : "Get the statistics of prediction",
        "description" : "Get the statistics of prediction where there are total number of flows, number of attack flows, and number of normal flows",
        "operationId" : "getPredictionStats",
        "parameters" : [ {
          "name" : "predictionId",
          "in" : "path",
          "description" : "Name of the model file to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "4bbfaa76-9e39-49b8-baa7-c4a7cdc9fed8"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "prediction" : {
                      "type" : "array",
                      "items" : {
                        "type" : "number",
                        "example" : 1243
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/predictions/{predictionId}/download" : {
      "get" : {
        "tags" : [ "predictions" ],
        "summary" : "Download a prediction file",
        "description" : "Download a prediction file",
        "operationId" : "downloadPrediction",
        "parameters" : [ {
          "name" : "predictionId",
          "in" : "path",
          "description" : "Name of the predictionId to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "multipart/form-data" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "401" : {
            "description" : "Prediction does not exist"
          }
        }
      }
    },
    "/predictions/{predictionId}/attack" : {
      "get" : {
        "tags" : [ "predictions" ],
        "summary" : "Download full report on attack traffics",
        "description" : "Download full report of attack traffics",
        "operationId" : "downloadPredictionAttack",
        "parameters" : [ {
          "name" : "predictionId",
          "in" : "path",
          "description" : "Name of the predictionId to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "multipart/form-data" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "401" : {
            "description" : "Prediction does not exist"
          }
        }
      }
    },
    "/predictions/{predictionId}/normal" : {
      "get" : {
        "tags" : [ "predictions" ],
        "summary" : "Download full report of normal traffics",
        "description" : "Download full report of normal traffics",
        "operationId" : "downloadPredictionNormal",
        "parameters" : [ {
          "name" : "predictionId",
          "in" : "path",
          "description" : "Name of the predictionId to return",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "3c6e4cb4-9b74-40c8-8f4a-132c9d5e4ace"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "multipart/form-data" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "401" : {
            "description" : "Prediction does not exist"
          }
        }
      }
    },
    "/xai/" : {
      "get" : {
        "tags" : [ "xai" ],
        "summary" : "The XAI process status",
        "description" : "Get the status of the latest XAI process",
        "operationId" : "getXAIStatus",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/xaiStatus"
                }
              }
            }
          }
        }
      }
    },
    "/xai/shap" : {
      "post" : {
        "tags" : [ "xai" ],
        "summary" : "Start explaining the model using SHAP",
        "description" : "Request producing explanations of a model using SHAP",
        "operationId" : "requestSHAP",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/shapConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/xaiStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to produce explanations using SHAP"
          }
        }
      }
    },
    "/xai/shap/explanations/{modelId}/{labelId}" : {
      "get" : {
        "tags" : [ "xai" ],
        "summary" : "Get explanations of feature importance for a label using SHAP",
        "description" : "Request producing explanations of feature importance for a label using SHAP",
        "operationId" : "explanationsSHAP",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
          }
        }, {
          "name" : "labelId",
          "in" : "path",
          "description" : "Name of the label",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "explanations" : {
                      "type" : "string",
                      "example" : ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/xai/lime" : {
      "post" : {
        "tags" : [ "xai" ],
        "summary" : "Start explaining the model using LIME",
        "description" : "Request producing explanations of a model using LIME",
        "operationId" : "requestLIME",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/limeConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/xaiStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to produce explanations using LIME"
          }
        }
      }
    },
    "/xai/lime/explanations/{modelId}/{labelId}" : {
      "get" : {
        "tags" : [ "xai" ],
        "summary" : "Get explanations for a label using LIME",
        "description" : "Request producing explanations for a label using LIME",
        "operationId" : "explanationsLIME",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
          }
        }, {
          "name" : "labelId",
          "in" : "path",
          "description" : "Name of the label",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "1"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "explanations" : {
                      "type" : "string",
                      "example" : ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/xai/explanations/{modelId}" : {
      "get" : {
        "tags" : [ "xai" ],
        "summary" : "Get the explanations produced of a model by XAI methods",
        "description" : "Get the explanations produced of a model by XAI methods",
        "operationId" : "getXAIExplanations",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "explanations" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "example" : "Malware_lime_explanations.json"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attacks/" : {
      "get" : {
        "tags" : [ "attacks" ],
        "summary" : "The attack injection process status",
        "description" : "Get the status of the process of performing adversarial attacks",
        "operationId" : "getAttacks",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/attacksStatus"
                }
              }
            }
          }
        }
      }
    },
    "/attacks/ctgan" : {
      "post" : {
        "tags" : [ "attacks" ],
        "summary" : "Perform Conditional Generative Adversarial Network (CTGAN) to generate synthetic tabular samples",
        "description" : "Perform CTGAN for synthetic tabular data generation",
        "operationId" : "performCTGAN",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ctganConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/attacksStatus"
                }
              }
            }
          }
        }
      }
    },
    "/attacks/ctgan/{modelId}/download" : {
      "get" : {
        "tags" : [ "attacks" ],
        "summary" : "Download synthetic tabular dataset produced by CTGAN",
        "description" : "Download synthetic tabular dataset produced by CTGAN",
        "operationId" : "getCTGANDataset",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model file",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "multipart/form-data" : {
                "schema" : {
                  "type" : "string",
                  "example" : "ctgan_samples.csv"
                }
              }
            }
          },
          "401" : {
            "description" : "CTGAN dataset does not exist"
          }
        }
      }
    },
    "/attacks/poisoning/ctgan" : {
      "post" : {
        "tags" : [ "attacks" ],
        "summary" : "Perform poisoning attacks with CTGAN",
        "description" : "Perform poisoning attacks with CTGAN",
        "operationId" : "performPoisoningCTGAN",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/poisoningAttacksConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/attacksStatus"
                }
              }
            }
          }
        }
      }
    },
    "/attacks/poisoning/random-swapping-labels" : {
      "post" : {
        "tags" : [ "attacks" ],
        "summary" : "Perform poisoning RSL attack by randomly choosing two samples of the training dataset and swapping their labels",
        "description" : "Perform random swapping labels attack",
        "operationId" : "performRandomSwappingLabels",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/randomSwappingLabelsConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/attacksStatus"
                }
              }
            }
          }
        }
      }
    },
    "/attacks/poisoning/target-label-flipping" : {
      "post" : {
        "tags" : [ "attacks" ],
        "summary" : "Perform poisoning TLF attack by flipping labels of some samples from one class to the target class",
        "description" : "Perform target label flipping attack",
        "operationId" : "performTargetLabelFlipping",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/targetLabelFlippingConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/attacksStatus"
                }
              }
            }
          }
        }
      }
    },
    "/attacks/{modelId}/datasets" : {
      "get" : {
        "tags" : [ "attacks" ],
        "summary" : "Get all poisoned training datasets of a model",
        "description" : "Get all poisoned training datasets of a model",
        "operationId" : "getModelPoisonedDatasets",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model file",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "multipart/form-data" : {
                "schema" : {
                  "type" : "string",
                  "example" : "rsl_poisoned_dataset.csv"
                }
              }
            }
          },
          "401" : {
            "description" : "The poisoned training dataset does not exist"
          }
        }
      },
      "delete" : {
        "tags" : [ "attacks" ],
        "summary" : "Delete all poisoned training datasets of a model",
        "description" : "Delete all poisoned training datasets of a model",
        "operationId" : "deleteModelPoisonedDatasets",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model file",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete all poisoned training datasets of a model"
          }
        }
      }
    },
    "/attacks/poisoning/{typeAttack}/{modelId}/download" : {
      "get" : {
        "tags" : [ "attacks" ],
        "summary" : "Download the poisoned training dataset",
        "description" : "Download the poisoned training dataset",
        "operationId" : "getPoisonedDataset",
        "parameters" : [ {
          "name" : "typeAttack",
          "in" : "path",
          "description" : "Type of poisoning attacks",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ctgan", "rsl", "tlf" ],
            "example" : "ctgan"
          }
        }, {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model file",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "multipart/form-data" : {
                "schema" : {
                  "type" : "string",
                  "example" : "rsl_poisoned_dataset.csv"
                }
              }
            }
          },
          "401" : {
            "description" : "The poisoned training dataset does not exist"
          }
        }
      }
    },
    "/metrics/{modelId}/accuracy" : {
      "get" : {
        "tags" : [ "metrics" ],
        "summary" : "Accuracy metric is the proportion of the total number of correct predictions that were correct",
        "description" : "Get the accuracy metric",
        "operationId" : "getAccuracy",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "content" : {
                      "type" : "string",
                      "example" : ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/{modelId}/currentness" : {
      "get" : {
        "tags" : [ "metrics" ],
        "summary" : "Currentness metric is the ratio between time taken to create explanations using XAI methods for the test dataset to the time taken to predict the same test set",
        "description" : "Get the currentness metric",
        "operationId" : "getCurrentness",
        "parameters" : [ {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "content" : {
                      "type" : "string",
                      "example" : ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/{typePoisoningAttack}/{modelId}/impact" : {
      "get" : {
        "tags" : [ "metrics" ],
        "summary" : "Impact metric of data poisoing attacks (or accuracy decrease) measures the decrease of a performance score between benign model and poisoned model",
        "description" : "Get the impact metric",
        "operationId" : "getImpact",
        "parameters" : [ {
          "name" : "typePoisoningAttack",
          "in" : "path",
          "description" : "Type of poisoning attacks",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ctgan", "rsl", "tlf" ],
            "example" : "rsl"
          }
        }, {
          "name" : "modelId",
          "in" : "path",
          "description" : "Name of the model",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "content" : {
                      "type" : "string",
                      "example" : ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "mmtStatus" : {
        "type" : "object",
        "properties" : {
          "isRunning" : {
            "type" : "boolean",
            "example" : true
          },
          "sessionId" : {
            "type" : "string",
            "example" : "bot-traffic.pcap-e312259a-8792-4ad6-a10d-9814c45b159d"
          },
          "isOnlineMode" : {
            "type" : "boolean",
            "example" : false
          },
          "startedAt" : {
            "type" : "string",
            "example" : "1694699293624"
          }
        }
      },
      "buildingStatus" : {
        "type" : "object",
        "properties" : {
          "isRunning" : {
            "type" : "boolean",
            "example" : true
          },
          "lastBuildId" : {
            "type" : "string",
            "example" : "5f4ffd91-69ba-4f1c-985d-c3a7f238e8b5"
          },
          "config" : {
            "$ref" : "#/components/schemas/buildConfig"
          },
          "lastBuildAt" : {
            "type" : "string",
            "example" : "1694705577544"
          }
        }
      },
      "predictingStatus" : {
        "type" : "object",
        "properties" : {
          "isRunning" : {
            "type" : "boolean",
            "example" : true
          },
          "lastPredictedId" : {
            "type" : "string",
            "example" : "5f4ffd91-69ba-4f1c-985d-c3a7f238e8b5"
          },
          "config" : {
            "$ref" : "#/components/schemas/predictConfig"
          },
          "lastPredictedAt" : {
            "type" : "string",
            "example" : "1694705577544"
          }
        }
      },
      "trainingParameters" : {
        "type" : "object",
        "properties" : {
          "nb_epoch_cnn" : {
            "type" : "number",
            "example" : 5
          },
          "nb_epoch_sae" : {
            "type" : "number",
            "example" : 3
          },
          "batch_size_cnn" : {
            "type" : "number",
            "example" : 16
          },
          "batch_size_sae" : {
            "type" : "number",
            "example" : 32
          }
        }
      },
      "datasetsConfig": {
        "type": "object",
        "properties": {
          "trainingDataset": {
            "type": "string",
            "example": "Train_samples.csv"
          },
          "testingDataset": {
            "type": "string",
            "example": "Test_samples.csv"
          }
        }
      },
      "buildConfig" : {
        "type" : "object",
        "properties" : {
          "buildConfig" : {
            "type" : "object",
            "properties" : {
              "datasets" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "datasetId" : {
                      "type" : "string",
                      "example" : "report-bot-test-9bf49bb1-055f-45e6-bd05-dbfeb39f93bd"
                    },
                    "isAttack" : {
                      "type" : "boolean",
                      "example" : true
                    }
                  }
                }
              },
              "training_ratio" : {
                "type" : "number",
                "example" : 0.7
              },
              "training_parameters" : {
                "$ref" : "#/components/schemas/trainingParameters"
              }
            }
          }
        }
      },
      "buildingACStatus" : {
        "type" : "object",
        "properties" : {
          "isRunning" : {
            "type" : "boolean",
            "example" : true
          },
          "lastBuildId" : {
            "type" : "string",
            "example" : "f5c48e82-f8f1-4bc3-823b-5c4524c0bbb3"
          },
          "config" : {
            "$ref" : "#/components/schemas/buildACConfig"
          },
          "lastBuildAt" : {
            "type" : "string",
            "example" : "1694699830518"
          }
        }
      },
      "buildACConfig" : {
        "type" : "object",
        "properties" : {
          "buildACConfig" : {
            "type" : "object",
            "properties" : {
              "modelType" : {
                "type" : "string",
                "enum" : [ "Neural Network", "XGBoost", "LightGBM" ],
                "example" : "LightGBM"
              },
              "dataset" : {
                "type" : "string",
                "example" : "output_full.csv"
              },
              "trainingRatio" : {
                "type" : "number",
                "example" : 0.7
              }
            }
          }
        }
      },
      "retrainStatus" : {
        "type" : "object",
        "properties" : {
          "isRunning" : {
            "type" : "boolean",
            "example" : true
          },
          "config" : {
            "$ref" : "#/components/schemas/retrainConfig"
          },
          "lastRetrainId" : {
            "type" : "string",
            "example" : "422e5a74-6b14-4ced-a630-b777fbfbb50c"
          },
          "lastRetrainAt" : {
            "type" : "string",
            "example" : "1694699830518"
          }
        }
      },
      "retrainADConfig": {
        "type": "object",
        "properties": {
          "retrainADConfig" : {
            "type" : "object",
            "properties" : {
              "trainingDataset": {
                "type": "string",
                "example": "Train_samples.csv"
              },
              "testingDataset": {
                "type": "string",
                "example": "Test_samples.csv"
              },
              "training_parameters": {
                "$ref": "#/components/schemas/trainingParameters"
              }
            }
          }
        }
      },
      "retrainConfig" : {
        "type" : "object",
        "properties" : {
          "retrainConfig" : {
            "type" : "object",
            "properties" : {
              "modelId" : {
                "type" : "string",
                "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
              },
              "trainingDataset" : {
                "type" : "string",
                "example" : "/tmp/Botnet_Train.csv"
              },
              "testingDataset" : {
                "type" : "string",
                "example" : "/tmp/Botnet_Test.csv"
              },
              "training_parameters" : {
                "$ref" : "#/components/schemas/trainingParameters"
              }
            }
          }
        }
      },
      "retrainACStatus" : {
        "type" : "object",
        "properties" : {
          "isRunning" : {
            "type" : "boolean",
            "example" : true
          },
          "config" : {
            "$ref" : "#/components/schemas/retrainACConfig"
          },
          "lastRetrainId" : {
            "type" : "string",
            "example" : "422e5a74-6b14-4ced-a630-b777fbfbb50c"
          },
          "lastRetrainAt" : {
            "type" : "string",
            "example" : "1694699830518"
          }
        }
      },
      "retrainACConfig": {
        "type" : "object",
        "properties" : {
          "retrainACConfig" : {
            "type": "object",
            "properties": {
              "modelId": {
                "type": "string",
                "example": "ac-lightgbm"
              },
              "datasetsConfig": {
                "$ref": "#/components/schemas/datasetsConfig"
              }
            }
          }
        }
      },
      "predictConfig" : {
        "type" : "object",
        "properties" : {
          "predictConfig" : {
            "type" : "object",
            "properties" : {
              "modelId" : {
                "type" : "string",
                "example" : "6d9aebed-aa34-47c5-be80-b41280c32163.h5"
              },
              "inputTraffic" : {
                "type" : "object",
                "properties" : {
                  "type" : {
                    "type" : "string",
                    "example" : "report"
                  },
                  "value" : {
                    "type" : "object",
                    "properties" : {
                      "reportId" : {
                        "type" : "string",
                        "example" : "report-honeypot.pcap-342727c9-e253-4124-85fd-974c2ad60bae"
                      },
                      "reportFileName" : {
                        "type" : "string",
                        "example" : "1675893004.993760_0_honeypot.pcap.csv"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "xaiStatus" : {
        "type" : "object",
        "properties" : {
          "isRunning" : {
            "type" : "boolean",
            "example" : true
          },
          "config" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/shapConfig"
            }, {
              "$ref" : "#/components/schemas/limeConfig"
            } ]
          },
          "lastRunAt" : {
            "type" : "string",
            "example" : "1694699830518"
          }
        }
      },
      "shapConfig" : {
        "type" : "object",
        "properties" : {
          "shapConfig" : {
            "type" : "object",
            "properties" : {
              "modelId" : {
                "type" : "string",
                "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
              },
              "numberBackgroundSamples" : {
                "type" : "number",
                "example" : "10"
              },
              "numberExplainedSamples" : {
                "type" : "number",
                "example" : "20"
              },
              "maxDisplay" : {
                "type" : "number",
                "example" : "10"
              }
            }
          }
        }
      },
      "limeConfig" : {
        "type" : "object",
        "properties" : {
          "limeConfig" : {
            "type" : "object",
            "properties" : {
              "modelId" : {
                "type" : "string",
                "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
              },
              "sampleId" : {
                "type" : "number",
                "example" : "5"
              },
              "numberFeature" : {
                "type" : "number",
                "example" : "10"
              }
            }
          }
        }
      },
      "ctganConfig" : {
        "type" : "object",
        "properties" : {
          "ctganConfig" : {
            "type" : "object",
            "properties" : {
              "modelId" : {
                "type" : "string",
                "example" : "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
              },
              "numberEpochs" : {
                "type" : "number",
                "example" : "5"
              },
              "numberSyntheticSamples" : {
                "type" : "number",
                "example" : "10000"
              }
            }
          }
        }
      },
      "poisoningAttacksConfig": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "example": "e0a0588e-96c4-4fdf-9237-a8e94a6f5ffe.h5"
          },
          "poisoningRate": {
            "type": "number",
            "example": "50"
          }
        }
      },
      "randomSwappingLabelsConfig": {
        "type": "object",
        "properties": {
          "randomSwappingLabelsConfig" : {
            "type" : "object",
            "properties" : {
              "poisoningAttacksConfig": {
                "$ref": "#/components/schemas/poisoningAttacksConfig"
              }
            }
          }
        }
      },
      "targetLabelFlippingConfig": {
        "type": "object",
        "properties": {
          "targetLabelFlippingConfig" : {
            "type" : "object",
            "properties" : {
              "poisoningAttacksConfig": {
                "$ref": "#/components/schemas/poisoningAttacksConfig"
              },
              "targetClass": {
                "type": "number",
                "example": "1"
              }
            }
          }
        }
      },
      "attacksStatus": {
        "type": "object",
        "properties": {
          "isRunning": {
            "type": "boolean",
            "example": true
          },
          "config": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ctganConfig"
              },
              {
                "$ref": "#/components/schemas/randomSwappingLabelsConfig"
              },
              {
                "$ref": "#/components/schemas/targetLabelFlippingConfig"
              }
            ]
          },
          "lastRunAt": {
            "type": "string",
            "example": "1694699830518"
          }
        }
      }
    }
  }
}